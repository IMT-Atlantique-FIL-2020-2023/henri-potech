@startuml Henri Potech Domain Models

package domain {
  class Book {
    + coverUrl: URL
    + title: String
    + isbn: String
    + synopsis: String
    + price: Double
    + Book(BookDTO)
  }

  class Library {
    + books: List<Book>
  }
  Library "0..*" *-- Book

  interface Offer {
    + apply(Book)
  }
  '{"type":"percentage","value":4}
  class Percentage implements Offer {
    + value: Double
  }
  '{"type":"minus","value":15}
  class Minus implements Offer {
    + value: Double
  }
  '{"type":"slice","sliceValue":100,"value":12}
  class Slice implements Offer {
    + sliceValue: Double
    + value: Double
  }

  class Cart {
    + books: List<Book>
    + availableOffers: List<Offer>
    + bestOffer: Offer?
  }
  Cart "0..*" o-- Book
  Cart "0..*" *-- Offer
  Cart "0..1" --> Offer
}

package viewmodel {
  class viewmodel.Discount {
    + reducedPrice: Double
    + DiscountLabel: String
  }
  class BookCellViewModel {
    + coverUrl: URL
    + title: String
    + basePrice: Double
    + Discount: Discount?
    + BookCellViewModel(model.Book, model.Discount)
  }
  BookCellViewModel --> Discount
}

@enduml